{"version":3,"sources":["components/search-box/style.tsx","components/search-box/component.tsx","components/constants.ts","components/list/component.tsx","components/pagination/constants.ts","components/utils.ts","components/normal/component.tsx","components/pagination/utils.ts","components/pagination/component.tsx","components/virtualList/component.tsx","components/react-window/component.tsx","App.tsx","serviceWorker.ts","index.tsx","components/pagination/style.module.css","app.module.css","components/normal/style.module.css","components/virtualList/style.module.css","components/react-window/style.module.css"],"names":["StyledInput","styled","input","Input","props","type","value","onChange","defaultProps","List","names","map","name","style","textDecoration","paddingBottom","textAlign","data","i","fake","faker","findName","push","filterData","text","filter","toUpperCase","includes","Normal","useState","setText","onChangeText","useCallback","event","target","filtered","className","styles","container","searchBox","list","Pagination","pageNum","setPageNum","useMemo","slice","page","movePage","increment","prevNum","length","buttons","button","onClick","disabled","VirtualList","height","width","itemCount","itemSize","index","item","ReactWindow","App","tableType","setTableType","onChangeTableType","showTable","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9df59b46.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const StyledInput = styled.input`\n  height:30px;\n  width:350px;\n  border:solid 1px black;\n  font-size:24px;\n  :focus{\n    outline:none\n  }\n`","import React from 'react'\nimport { StyledInput } from './style'\n\ntype Props = {\n  value: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const Input: React.FC<Props> = props => {\n  return <StyledInput type='text' value={props.value} onChange={props.onChange} />\n}\n\nInput.defaultProps = {\n  value: '',\n  onChange: () => { }\n}\n\n\n","import faker from 'faker'\n\nexport const data: string[] = []\n\nfor (let i = 0; i < 300000; i++) {\n  const fake = faker.name.findName()\n  data.push(fake)\n}","import React from 'react'\n\ntype Props = {\n  names: string[]\n}\n\nexport const List: React.FC<Props> = (props) => {\n  return (\n    <div>\n      {\n        props.names.map((name) => {\n          return <div style={{ textDecoration: 'underline', paddingBottom: '15px', textAlign: 'center' }}>{name}</div>\n        })\n      }\n    </div>\n\n  )\n}","import faker from 'faker'\n\nexport const data: string[] = []\n\nfor (let i = 0; i < 300000; i++) {\n  const fake = faker.name.findName()\n  data.push(fake)\n}","import { data } from './constants'\n\nexport const filterData = (text: string) => data.filter(name => name.toUpperCase().includes(text.toUpperCase()))","import React, { useState, useCallback, } from 'react';\nimport { Input } from '../search-box'\nimport { List } from '../list'\nimport { filterData } from '../utils'\nimport { data } from '../constants'\nimport styles from './style.module.css'\n\nexport const Normal: React.FC = () => {\n  const [text, setText] = useState<string>('')\n\n\n  const onChangeText = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value)\n  }, [])\n\n  // Need to reduce array\n  const filtered = text === '' ? data : filterData(text)\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchBox}>\n        <Input value={text} onChange={onChangeText} />\n      </div>\n      <div className={styles.list}>\n        <List names={filtered} />\n      </div>\n    </div>\n  );\n}\n\n\n","import { data } from './constants'\n\nexport const filterData = (text: string, page: number) => data.slice(page * 1000, page * 1000 + 1000).filter(name => name.toUpperCase().includes(text.toUpperCase()))","import React, { useState, useCallback, useMemo } from 'react';\nimport { Input } from '../search-box'\nimport { List } from '../list'\nimport { filterData } from './utils'\nimport { data } from './constants'\nimport styles from './style.module.css'\n\nexport const Pagination: React.FC = () => {\n  const [text, setText] = useState<string>('')\n  const [pageNum, setPageNum] = useState<number>(0)\n\n  const onChangeText = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value)\n  }, [])\n\n  // Need to reduce array\n  const filtered = useMemo(() => text === '' ? data.slice(pageNum * 1000, pageNum * 1000 + 1000) : filterData(text, pageNum), [pageNum, text])\n\n  const movePage = useCallback((increment: number) => () => {\n    setPageNum(prevNum => prevNum + increment)\n  }, [])\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchBox}>\n        <Input value={text} onChange={onChangeText} />\n      </div>\n      <p>{pageNum + 1} / {data.length / 1000}</p>\n      <div className={styles.list}>\n        <List names={filtered} />\n      </div>\n      <div className={styles.buttons}>\n        <button type={'button'} className={styles.button} onClick={movePage(-1)} disabled={pageNum === 0}>Prev</button>\n        <button type={'button'} className={styles.button} onClick={movePage(1)} disabled={pageNum === data.length / 1000 - 1}>Next</button>\n      </div>\n    </div>\n  );\n}\n\n\n","import React from 'react'\nimport { FixedSizeList } from 'react-window'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport styles from './style.module.css'\ntype Props = {\n  names: string[]\n}\n\nexport const VirtualList: React.FC<Props> = (props) => {\n  return (\n    <div className={styles.container}>\n      <AutoSizer >\n        {({ height, width }) => (\n          <FixedSizeList\n            itemCount={props.names.length}\n            itemSize={20}\n            height={height}\n            width={width}\n          >\n            {({ index, style }) => {\n              return <div className={styles.item} style={style}>{props.names[index]}</div>\n            }}\n          </FixedSizeList>\n        )}\n      </AutoSizer>\n    </div>\n  )\n}","import React, { useState, useCallback, } from 'react';\nimport { Input } from '../search-box'\nimport { VirtualList } from '../virtualList'\nimport { filterData } from '../utils'\nimport { data } from '../constants'\nimport styles from './style.module.css'\n\nexport const ReactWindow: React.FC = () => {\n  const [text, setText] = useState<string>('')\n\n  const onChangeText = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value)\n  }, [])\n\n  // Need to reduce array\n  const filtered = text === '' ? data : filterData(text)\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchBox}>\n        <Input value={text} onChange={onChangeText} />\n      </div>\n      <VirtualList names={filtered} />\n    </div>\n  );\n}\n\n\n","import React, { useState, useCallback, } from 'react';\nimport { Normal } from './components/normal'\nimport { Pagination } from './components/pagination'\nimport { ReactWindow } from './components/react-window'\nimport styles from './app.module.css'\n\nconst App: React.FC = () => {\n  const [tableType, setTableType] = useState<'normal' | 'page' | 'window' | 'none'>('none')\n  const onChangeTableType = useCallback((type: 'normal' | 'page' | 'window' | 'none') => () => {\n    setTableType(type)\n  }, [])\n\n  const showTable = (type: 'normal' | 'page' | 'window' | 'none') => {\n    switch (type) {\n      case 'normal':\n        return <Normal />\n      case 'page':\n        return <Pagination />\n      case 'window':\n        return <ReactWindow />\n      default:\n        return <div></div>\n    }\n  }\n\n  return <div className={styles.container}>\n    <div className={styles.buttons}>\n      <button className={styles.button} type={'button'} onClick={onChangeTableType('normal')}>Normal*Warning*</button>\n      <button className={styles.button} type={'button'} onClick={onChangeTableType('page')}>Pagination</button>\n      <button className={styles.button} type={'button'} onClick={onChangeTableType('window')}>React Window</button>\n    </div>\n    <div className={styles.list}>\n      {showTable(tableType)}\n    </div>\n  </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__k-hsh\",\"searchBox\":\"style_searchBox__tT503\",\"list\":\"style_list__2cyQh\",\"button\":\"style_button__1ybLx\",\"buttons\":\"style_buttons__2OK8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"button\":\"app_button__1epl4\",\"buttons\":\"app_buttons__2PWRg\",\"search-box\":\"app_search-box__HwcOU\",\"list\":\"app_list__2we4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2xduG\",\"searchBox\":\"style_searchBox__1LTX-\",\"list\":\"style_list__2Kjn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__kenU9\",\"container\":\"style_container__2PXqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1O4we\",\"searchBox\":\"style_searchBox__3bJBK\",\"list\":\"style_list__VpbNq\"};"],"sourceRoot":""}